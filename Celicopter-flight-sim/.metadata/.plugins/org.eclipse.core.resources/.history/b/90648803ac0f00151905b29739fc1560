import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.JFrame;

public class test2 extends Canvas{
	/**
	 * 
	 */
	public Rectangle virtualBounds;
	public ScreenObject sc;
	public ScreenObject sc1;
	public long lastLoopTime;

	public test2() {
		super();
		/**This code should work for devices with multiple screens*/
		//Defines a variable to hold the maximum bounds of the screen we will find shortly
		virtualBounds = new Rectangle();
		//Gets an object that encapsulates all periphery devices attached to this computer (screens, printers, etc.)
		GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
		//Unpacks this object and gets a list of all peripheries 
		GraphicsDevice[] gs = ge.getScreenDevices();
		//Iterates through this list, going to each device, getting the list of settings with each device, and parsing the maximum window size from these settings  
		for (int j = 0; j < gs.length; j++) {
			//Gets the list of settings associated with the device the for loop is currently on
			GraphicsConfiguration[] gc =gs[j].getConfigurations();
			//Iterates through the settings to get the bounds
			for (int i=0; i < gc.length; i++) {
				virtualBounds =virtualBounds.union(gc[i].getBounds());
			}
		}
		sc=new ScreenObject(100,0,0.1,0.1,182,1);
		sc1=new ScreenObject(1920,100,0.1,-0.1,182,1);
		lastLoopTime = System.currentTimeMillis();
		System.out.println(virtualBounds);
	}
	
	public void paint(Graphics g){
		//g.setColor(Color.WHITE);
		//g.fillRect(0, 0, getWidth(), getHeight());
		long delta=-1*(lastLoopTime-System.currentTimeMillis());
		lastLoopTime = System.currentTimeMillis();
		g.fillRect(100, 100, 100, 100);
		sc.draw(g);
		sc1.draw(g);
		sc.move(delta, getWidth(), getHeight());
		sc1.move(delta, getWidth(), getHeight());
		try {
			Thread.sleep(2);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		repaint();
	}
}